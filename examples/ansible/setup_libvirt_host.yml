---
# Ansible Playbook: Setup SUSE ALP Dolomite as a libvirt Host
# Description: This Ansible playbook automates the setup of a SUSE ALP Dolomite host as a libvirt host.
# The steps encompass installing necessary packages for the workload, ensuring system readiness through reboots if necessary,
# fetching the required images for kvm-server and kvm-client from the specified registry, and installing tools for both kvm-server
# and kvm-client. Subsequent tasks ensure that needed services are stopped, started, or enabled as per the requirements.
# Documentation reference: [https://documentation.suse.com/alp/dolomite/html/alp-dolomite/available-alp-workloads.html#task-run-kvm-with-podman]
# Creating customized VMs using virt-scenario: [https://documentation.suse.com/alp/dolomite/html/alp-dolomite/concept-virt-scenario.html]

- name: Setup ALP system as a libvirt host
  hosts: alphost
  become: true

  tasks:
    - name: Install required packages, if any, for workload
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      notify: Reboot
      loop:
        - kernel-default
        - netcat-openbsd
        - python3-libvirt-python
        - python3-lxml
        - swtpm

    - name: Reboot right now if necessary
      ansible.builtin.meta: flush_handlers

    - name: Retrieve images for kvm-server and kvm-client
      containers.podman.podman_image:
        name: "{{ item }}"
        state: present
      loop:
        - registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-server:latest
        - registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-client:latest

    - name: Install tools for kvm-server
      ansible.builtin.command: >-
        podman container runlabel install registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-server:latest
      register: workload_runlabel_install
      changed_when:
        - ('already exist' not in workload_runlabel_install.stdout)

    - name: Install tools for kvm-client
      ansible.builtin.command: >-
        podman container runlabel install registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-client:latest
      register: workload_runlabel_install
      changed_when:
        - ('already exist' not in workload_runlabel_install.stdout)

    - name: Ensure libvirtd is stopped and disabled
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - libvirtd.service
        - libvirtd-ro.socket
        - libvirtd-admin.socket
        - libvirtd-tcp.socket
        - libvirtd-tls.socket
      register: service_result
      failed_when: >
        service_result is failed and
        ("Could not find the requested service" not in service_result.msg)

    - name: Ensure kvm-server-container.service is started and enabled
      ansible.builtin.service:
        name: kvm-server-container.service
        state: started
        enabled: true
      notify: Reload systemd

    - name: Reload systemd right now if necessary
      ansible.builtin.meta: flush_handlers

    - name: Enable and start log and lock drivers
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - container-virtlogd.service
        - virtlogd.socket
        - virtlogd-admin.socket
        - container-virtlockd.service
        - virtlockd.socket
        - virtlockd-admin.socket

    - name: Enable and start other drivers
      ansible.builtin.service:
        name: "container-virt{{ item }}d.service"
        state: started
        enabled: true
      loop:
        - qemu
        - network
        - nodedev
        - nwfilter
        - proxy
        - secret
        - storage

    - name: Display completion message
      ansible.builtin.debug:
        msg: >-
          ALP system setup as a libvirt host on alptestvm completed
          successfully. All necessary components are installed and
          configured for managing virtual machines.

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        reboot_timeout: 600
        post_reboot_delay: 60

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
